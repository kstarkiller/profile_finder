stages:
  - test
  - build
  - deploy

variables:
  IMAGE_TAG: aiprofilesmatchingacr.azurecr.io/aiprofilesmatching:latest
  AZURE_ACR: aiprofilesmatchingacr
  AZURE_WEBAPP: aiprofilesmatchingWebApp
  AZURE_RG: rg-cgi-weu-cloud-genAIshowcase-dev

# Définitiion d'un modèle de vérification des variables d'environnement
.check_variables: &check_variables
  before_script:
    - if [ -z "$AZURE_OPENAI_API_KEY" ]; then echo "La variable d'environnement AZURE_OPENAI_API_KEY n'est pas définie"; exit 1; fi
    - if [ -z "$AZURE_OPENAI_ENDPOINT" ]; then echo "La variable d'environnement AZURE_OPENAI_ENDPOINT n'est pas définie"; exit 1; fi
    - if [ -z "$AZURE_SEARCH_API_KEY" ]; then echo "La variable d'environnement AZURE_SEARCH_API_KEY n'est pas définie"; exit 1; fi
    - if [ -z "$AZURE_SEARCH_ENDPOINT" ]; then echo "La variable d'environnement AZURE_SEARCH_ENDPOINT n'est pas définie"; exit 1; fi
    - if [ -z "$AZURE_SP_ID" ]; then echo "La variable d'environnement AZURE_SP_ID n'est pas définie"; exit 1; fi
    - if [ -z "$AZURE_SP_SECRET" ]; then echo "La variable d'environnement AZURE_SP_SECRET n'est pas définie"; exit 1; fi
    - if [ -z "$AZURE_TENANT" ]; then echo "La variable d'environnement AZURE_TENANT n'est pas définie"; exit 1; fi

test:
  stage: test
  only:
    - dev_kevin
  image: python:3.11.9
  before_script:
    - *check_variables
  script:
    - pip install -r requirements.txt
    - python -m unittest discover -s tests

build:
  stage: build
  only:
    - dev_kevin
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  needs:
    - test
  before_script:
    - *check_variables
  script:
    - docker build \
        --build-arg AZURE_OPENAI_API_KEY="$AZURE_OPENAI_API_KEY" \
        --build-arg AZURE_OPENAI_ENDPOINT="$AZURE_OPENAI_ENDPOINT" \
        --build-arg AZURE_SEARCH_API_KEY="$AZURE_SEARCH_API_KEY" \
        --build-arg AZURE_SEARCH_ENDPOINT="$AZURE_SEARCH_ENDPOINT" \
        -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

deploy:
  stage: deploy
  only:
    - dev_kevin
  image: mcr.microsoft.com/azure-cli
  needs:
    - build
  before_script:
    - *check_variables
  script:
    - az login --service-principal \
        -u "$AZURE_SP_ID" \
        -p "$AZURE_SP_SECRET" \
        --tenant "$AZURE_TENANT"
    - ACR_PASSWORD=$(az acr credential show --name $AZURE_ACR --query "passwords[0].value" -o tsv)
    - if [ -z "$ACR_PASSWORD" ]; then echo "Échec de la récupération du mot de passe ACR"; exit 1; fi
    - az webapp config container set \
        --name $AZURE_WEBAPP \
        --resource-group $AZURE_RG \
        --docker-custom-image-name $IMAGE_TAG \
        --docker-registry-server-url https://$AZURE_ACR.azurecr.io \
        --docker-registry-server-user $AZURE_ACR \
        --docker-registry-server-password $ACR_PASSWORD
    - az webapp restart \
        --name $AZURE_WEBAPP \
        --resource-group $AZURE_RG
