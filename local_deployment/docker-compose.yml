services:
  postgres:
    image: postgres:latest
    container_name: pf_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5332:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 20s
    networks:
      - pf_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  mlflow:
    image: ghcr.io/mlflow/mlflow
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      - PIP_NO_CACHE_DIR=off
      - PIP_DISABLE_PIP_VERSION_CHECK=on
      - PIP_DEFAULT_TIMEOUT=100
      - POETRY_VERSION=1.1.4
    command: >
      /bin/bash -c "
        apt-get update && 
        apt-get install -y libpq-dev gcc python3-dev python3-venv &&
        pip install --upgrade pip &&
        pip install psycopg2 &&
        pip install mlflow &&
        mlflow server --backend-store-uri postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME} -h 0.0.0.0
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 20s
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pf_network
    volumes:
      - ./mlflows:/mlflow/artifacts
      - ./:/workspace/

  mongo:
    image: mongo:latest
    container_name: pf_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PWD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 20s
    networks:
      - pf_network
    volumes:
      - mongo_data:/data/db

  bdd_api:
    build:
      context: ./bdd_api
    image: pf_bdd_api
    container_name: pf_bdd_api
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: postgres
      DB_PORT: 5432
    ports:
      - "5050:5050"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - pf_network
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 12G
        reservations:
          cpus: '4'
          memory: 12G

  rag_api:
    build:
      context: ./rag_api
    image: pf_api
    container_name: pf_api
    environment:
      MINAI_API_KEY: ${MINAI_API_KEY}
      DB_API_HOST: bdd_api
      DB_API_PORT: 5050
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: ${MONGO_USER}
      MONGO_PWD: ${MONGO_PWD}
      MONGO_DB: ${MONGO_DB}
      MF_HOST: mlflow
      MF_PORT: 5000
      SECRET_KEY: ${SECRET_KEY}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - pf_network
    volumes:
      - ollama_models:/root/.ollama/models
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 12G
        reservations:
          cpus: '4'
          memory: 12G

  rag_front:
    build:
      context: ./app
    image: pf_front
    container_name: pf_front
    environment:
      DB_API_HOST: bdd_api
      DB_API_PORT: 5050
      RAG_API_HOST: rag_api
      RAG_API_PORT: 8080
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - pf_network

networks:
  pf_network:
    driver: bridge
    name: pf_network

volumes:
  postgres_data:
  ollama_models:
  mongo_data:
  mlflow-data:
  clickhouse-data:
  openlit-data: