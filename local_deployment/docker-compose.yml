services:
  postgres:
    build:
      context: ./postgres
    image: pf_postgres
    container_name: pf_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 20s
    networks:
      - mynetwork
    volumes:
      - pgdata:/var/lib/postgresql/data

  rag_api:
    build:
      context: ./rag_api
    image: pf_api
    container_name: pf_api
    environment:
      RAG_LOCAL_USERNAME: ${RAG_LOCAL_USERNAME}
      RAG_LOCAL_PASSWORD: ${RAG_LOCAL_PASSWORD}
      MINAI_API_KEY: ${MINAI_API_KEY}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

  rag_front:
    build:
      context: ./app
    image: pf_front
    container_name: pf_front
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      HOST: postgres
      PORT: 5432
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

volumes:
  pgdata:

networks:
  mynetwork: